name: Drone Incident Monitor

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  monitor-incidents:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 feedparser python-dateutil
    
    - name: Run incident monitor
      id: monitor
      run: |
        python .github/scripts/monitor_drone_incidents.py
      env:
        GOOGLE_NEWS_API_KEY: ${{ secrets.GOOGLE_NEWS_API_KEY }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
    
    - name: Commit incident updates
      if: steps.monitor.outputs.new_incidents == 'true'
      run: |
        git config --global user.name 'Drone Incident Bot'
        git config --global user.email 'bot@dronedetection.com'
        git add data/incidents.json
        git commit -m "Update drone incidents - $(date +'%Y-%m-%d %H:%M')"
        git push
    
    - name: Create release if new incidents
      if: steps.monitor.outputs.new_incidents == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: incidents-${{ steps.monitor.outputs.timestamp }}
        release_name: Drone Incidents Update - ${{ steps.monitor.outputs.date }}
        body: |
          ## New Drone Incidents Detected
          
          ${{ steps.monitor.outputs.release_notes }}
          
          ### Summary
          - Total new incidents: ${{ steps.monitor.outputs.incident_count }}
          - Locations affected: ${{ steps.monitor.outputs.locations }}
          
          View full details in [incidents.json](data/incidents.json)
        draft: false
        prerelease: false
    
    - name: Send notification emails
      if: steps.monitor.outputs.new_incidents == 'true'
      run: |
        python scripts/send_incident_notifications.py
