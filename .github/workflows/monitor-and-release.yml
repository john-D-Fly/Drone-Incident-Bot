name: Drone Incident Monitor & Release

on:
  schedule:
    - cron: '0 * * * *'        # every hour
  workflow_dispatch:            # allow manual run

jobs:
  monitor-and-publish:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------------------------------
      # 1. Checkout repo
      # -----------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # -----------------------------------------------------------
      # 2. Python setup
      # -----------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # -----------------------------------------------------------
      # 3. Install runtime deps
      # -----------------------------------------------------------
      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 feedparser python-dateutil

      # -----------------------------------------------------------
      # 4. Run the incident monitor
      #    (writes outputs we’ll use below)
      # -----------------------------------------------------------
      - name: Run incident monitor
        id: monitor
        run: python .github/scripts/monitor_drone_incidents.py
        env:
          GOOGLE_NEWS_API_KEY: ${{ secrets.GOOGLE_NEWS_API_KEY }}

      # -----------------------------------------------------------
      # 5. Commit updated incidents.json (only if new)
      # -----------------------------------------------------------
      - name: Commit incident updates
        if: steps.monitor.outputs.new_incidents == 'true'
        run: |
          git config --global user.name  'Drone Incident Bot'
          git config --global user.email 'bot@dronedetection.com'
          git add data/incidents.json
          git commit -m "incidents: $(date -u '+%Y-%m-%dT%H:%MZ')"
          git push

      # -----------------------------------------------------------
      # 6. Create GitHub Release (only if new)
      # -----------------------------------------------------------
      - name: Create release for new incidents
        if: steps.monitor.outputs.new_incidents == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:    incidents-${{ steps.monitor.outputs.timestamp }}
          release_name: "Drone Incidents Update – ${{ steps.monitor.outputs.date }}"
          body: |
            ## New Drone Incidents Detected

            ${{ steps.monitor.outputs.release_notes }}

            ### Summary
            - Total new incidents: ${{ steps.monitor.outputs.incident_count }}
            - Locations affected: ${{ steps.monitor.outputs.locations }}

            View full details in [incidents.json](data/incidents.json)
          draft: false
          prerelease: false
